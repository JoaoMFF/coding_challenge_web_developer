openapi: 3.0.0
info:
  title: Coding challenge API
  description: Coding challenge API
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /questions:
    get:
      tags:
        - Questions
      summary: Returns questions
      description: Returns all the questions
      parameters:
        - name: id
          in: query
          description: Question id
          required: false
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: '^[0-9a-f]{24}$'
        - name: page
          in: query
          required: false
          description: Page setup offset for search.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: Limit of records to return
          schema:
            type: number
            minimum: 1
            maximum: 100
            default: 20
        - name: page
          in: query
          description: Page of questions. Page setup offset for search.
          required: false
          schema:
            type: number
            minimum: 1
            default: 1
      responses:
        '200':
          description: Questions data
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: User name
                        email:
                          type: string
                          format: email
                          description: User email
                        observations:
                          type: string
                          description: User observations
                        date:
                          type: string
                          example: '2022-05-04'
                          pattern: '([0-9]{4})-([0-9]{2})-([0-9]{2})'
                          description: Date of creation
                      required:
                        - name
                        - email
                        - observations
                        - date
                        - created_at
                  totalQuestions:
                    type: number
                  totalResults:
                    type: number
                  currentPage:
                    type: number
                  lastPage:
                    type: number
                  skip:
                    type: number
                required:
                  - questions
                  - totalQuestions
                  - totalResults
                  - currentPage
                  - lastPage
                  - skip
        204:
          description: No Content
    post:
      tags:
        - Questions
      summary: Add question
      description: Add a new question
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Question data
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  description: User name
                email:
                  type: string
                  format: email
                  description: User email
                observations:
                  type: string
                  description: User observations
                date:
                  type: string
                  example: '2022-05-04'
                  pattern: '([0-9]{4})-([0-9]{2})-([0-9]{2})'
                  description: Date of creation
              required:
                - name
                - email
                - observations
                - date
      responses:
        201:
          description: OK
        400:
          description: Bad request
